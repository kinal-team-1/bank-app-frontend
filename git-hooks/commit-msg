#!/bin/bash

# Function to validate commit message against Smart Commit standards
validate_commit_message() {
    single_spaced_string=$(echo "$1" | tr -s '[:space:]')
    commit_message="$1"

    # Use node to check the regex

    isValid=$(node -e "const regex = /^\w+-\d+(( #comment .+\S)( #time .+\S)|( #time .+\S)( #comment .+\S))?$/gm; console.log(regex.test('$commit_message'));")

    # Check if commit message follows the Smart Commit syntax
    if ! $isValid; then
        echo -e "\e[91mError: Commit message does not follow the Smart Commit standard.\e[0m"
        exit 1
    fi
}

# Get the path to the commit message file
commit_msg_file="$1"

# Read the commit message from the file
commit_message=$(cat "$commit_msg_file")

echo -e "\e[95mChecking commit message format\e[0m"
echo -e "\e[90mYou have to have installed node for this to work and it needs to be on your PATH variable\e[0m"
# Validate the commit message
validate_commit_message "$commit_message"

# If the commit message follows the Smart Commit standard, exit successfully
echo -e "\e[94mCommit does follow the Smart Commit standard.\e[0m"
echo ""
echo -e "\e[92mCommit has been done\e[0m"
exit 0
